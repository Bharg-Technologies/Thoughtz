/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Merkle, MerkleInterface } from "../Merkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061025e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a9a49c714610030575b600080fd5b61004361003e36600461011b565b610057565b604051901515815260200160405180910390f35b600081815b85518110156100fa576000868281518110610079576100796101e9565b602002602001015190508083106100b9576040805160208101839052908101849052606001604051602081830303815290604052805190602001206100e4565b6040805160208101859052908101829052606001604051602081830303815290604052805190602001205b92505080806100f2906101ff565b91505061005c565b509092149392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561013057600080fd5b833567ffffffffffffffff8082111561014857600080fd5b818601915086601f83011261015c57600080fd5b813560208282111561017057610170610105565b8160051b604051601f19603f8301168101818110868211171561019557610195610105565b60405292835281830193508481018201928a8411156101b357600080fd5b948201945b838610156101d1578535855294820194938201936101b8565b9a918901359950506040909701359695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561022157634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122063fbf004670ecbea5ca86ef060be02193d48d4d925e7e241139fbb1399e251e164736f6c634300080b0033";

export class Merkle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Merkle> {
    return super.deploy(overrides || {}) as Promise<Merkle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Merkle {
    return super.attach(address) as Merkle;
  }
  connect(signer: Signer): Merkle__factory {
    return super.connect(signer) as Merkle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleInterface {
    return new utils.Interface(_abi) as MerkleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Merkle {
    return new Contract(address, _abi, signerOrProvider) as Merkle;
  }
}
